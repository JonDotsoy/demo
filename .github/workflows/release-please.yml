on:
  push:
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GITHUB_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: node
  publish_macos_bin:
    runs-on: macos-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install && bun run build
      - run: tar -cvzf demo-$(uname -s)-$(uname -m).tar.gz -C dist demo
      - run: gh release upload ${{ needs.release-please.outputs.tag_name }} demo-$(uname -s)-$(uname -m).tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish_linux_bin:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install && bun run build
      - run: tar -cvzf demo-$(uname -s)-$(uname -m).tar.gz -C dist demo
      - run: gh release upload ${{ needs.release-please.outputs.tag_name }} demo-$(uname -s)-$(uname -m).tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # publish_win_bin:
  #   runs-on: windows-latest
  #   needs: release-please
  #   if: needs.release-please.outputs.releases_created == 'true'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: oven-sh/setup-bun@v1
  #     - run: bun install && bun run build
  #     - run: tar -cvzf demo-$(uname -s)-$(uname -m).tar.gz -C dist demo
  #     - run: gh release upload ${{ needs.release-please.outputs.tag_name }} demo-$(uname -s)-$(uname -m).tar.gz
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
